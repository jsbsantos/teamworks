@using Teamworks.Web.Helpers.Extensions
@model Teamworks.Web.ViewModels.Mvc.RegisterTimelogsViewModel

@{
    ViewBag.Title = "Timelogs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h1>Timelogs <small>On this page you can register where you spent or time and see your past entries for all projects and activities.</small></h1>    
</div>
@if (Model.Options.Count == 0)
{
    <p class="tc well">To register time you need to have a project. You can start in the <a href="@Url.RouteUrl("projects_get")">projects</a> page.</p>
}
else
{
    <div class="row">
        <div class="span12">
            <div class="tabbable tabs-left">
                <ul class="nav nav-tabs" data-bind="foreach: tabs">
                    <li data-bind="css: {active: $parent.selected() === $data }">
                        <a href="#" data-bind="click: $parent._select, text: description">Today</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <form class="form-horizontal" data-bind="submit: timelogs._create">
                        <p> The registration will be made for day <strong class="highlight" data-bind="text: timelogs.input.date.formatted, highlight: 'alert alert-info'"></strong>. 
                            <a class="hide" data-bind="datepicker: timelogs.input.date.formatted, css: { hide: selected().calendar === false }" data-date-autoclose="true" data-date-format="dd/MM/yyyy" data-date-enddate="@DateTime.Today.ToString("dd/MM/yyyy")"><i class="icon-calendar"></i></a>
                        </p>
                        <div class="control-group" >
                            <input id="project_name" autofocus="autofocus" class="span4" name="project_name" placeholder="Project name, Activity name" autocomplete="off" data-bind="typeahead: typeahead" />
                            <span class="hide" data-bind="text: typeahead.validation_message, css:{ hide: !typeahead.has_error() }"></span>
                        </div>
                        <div class="control-group">
                            <input name="project_description" placeholder="Description" class="span4" data-bind="value: timelogs.input.description, valueUpdate: 'afterkeyup'" />
                            <span class="hide" data-bind="text: timelogs.input.description.validation_message, css:{hide:!timelogs.input.description.has_error}"></span>
                        </div>
                        <div class="control-group">
                            <input name="project_duration" placeholder="ie: 5 hours, 2h 30 minutes, 120m" class="span4" data-bind="value: timelogs.input.duration.duration" />
                            <span class="hide" data-bind="text: timelogs.input.duration.validation_message, css:{hide:!timelogs.input.duration.has_error}"></span>
                        </div>
                        <div>
                            <button class="btn btn-large btn-success" data-bind="disable: timelogs.input.editing,
                             css: { 'btn-success': !timelogs.input.has_error(), 'btn-danger': timelogs.input.has_error()}"
                                    type="submit">Register</button>
                            <div class="progress progress-success progress-striped active input-small hide" data-bind="css: { hide: !timelogs.input.editing() }">
                                <div class="bar" style="width: 100%;"></div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="span12">
            <header class="lead">
                <h2>Your time <small>The time used on your daily activities</small></h2>
            </header>
            <p class="tc well hide" data-bind="css: { 'hide': timelogs().length }">
                You have no logged hours.
            </p>
            
            <div class="well btn-toolbar">
                <div class="btn-group">
                    <input type="text" class="btn uneditable-input disabled" data-bind="value: filter.project().name"></input>
                    <button class="btn dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" data-bind="template: { name: 'dropdown-project-template', foreach: filter.distinctProjects }">
                    </ul>
                </div>

                <div class="btn-group highlight" data-bind="highlight: 'alert alert-info'">
                    <input type="text" class="btn uneditable-input disabled " data-bind="value: filter.activity().name, highlight: 'alert alert-info'"></input>
                    <button class="btn dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" data-bind="template: { name: 'dropdown-activity-template', foreach: filter.distinctActivities }">
                    </ul>
                </div>
            </div>

            <table class="table table-striped table-bordered table-condensed hide" data-bind="css: { 'hide': !timelogs().length }">
                <thead>
                    <tr>
                        <th>Project, Activity</th>
                        <th><a data-bind="click: function(){ sort('duration'); }">Duration</a></th>
                        <th><a data-bind="click: function(){ sort('description'); }">Description</a></th>
                        <th><a data-bind="click: function(){ sort('date'); }">Date</a></th>
                        <th class="input-small">Edit</th>
                    </tr>
                </thead>
                <tbody data-bind="template: { name: 'timelog-template', foreach: sortedTimelog() }">
                </tbody>
            </table>
            <script type="text/html" id="dropdown-activity-template">
                <li data-bind="css:{hide: $parent.filter.project().id == -1 || $parent.filter.project().id != project }"><a data-bind="text: name, click: function(){ $parent.filter.activity($data); }"></a></li>
            </script>
            <script type="text/html" id="dropdown-project-template">
                <li><a data-bind="text: name, click: function(){ $parent.filter.project($data); }"></a></li>
            </script>
            <script type="text/html" id="timelog-template">
                <tr data-bind="css:{hide: !$parent.filter.byProject($data) || !$parent.filter.byActivity($data) }">
                    <td>
                        <strong><a data-bind="attr:{ href: '/projects/' + project.id() }, text: project.name"></a></strong>,
                        <span><a data-bind="attr:{ href: '/projects/' + project.id() + '/activities/' + activity.id() }, text: activity.name"></a></span>
                    </td>
                    <td>
                        <span class="hide" data-bind="text: duration, css: {hide: editing()}"></span>
                        <input name="timelog_duration" class="hide input-small" data-bind="css: { hide: !editing() }, value: duration, valueUpdate: 'afterkeyup'" />
                    </td>
                    <td>
                        <span class="hide" data-bind="text: description, css: {hide: editing()}"></span>
                        <input name="timelog_description" class="hide" data-bind="css: { hide: !editing() }, value: description, valueUpdate: 'afterkeyup'" />
                    </td>
                    <td><span class="hide" data-bind="text: date.formatted, css: { hide: editing() }"></span>
                        <input name="timelog_date" class="hide input-small" data-bind="css: { hide: !editing() }, value: date.formatted, valueUpdate: 'afterkeyup'" />
                        <a class="hide" data-bind="datepicker: date.formatted, css: { hide: !editing() }" data-date-autoclose="true" data-date-format="dd/MM/yyyy" data-date-enddate="@DateTime.Today.ToString("dd/MM/yyyy")"><i class="icon-calendar"></i></a>
                    </td>
                    <td class="input-small">
                        <a class="hide" data-bind="css: { hide: editing()}, click: function() { editing(true); }">
                            <i class="icon-edit"></i> 
                        </a> 
                        &nbsp;
                        <a class="hide" data-bind="css: { hide: editing()}, click: function() { _remove(); }">
                            <i class="icon-trash"></i> 
                        </a>
                        <a class="hide" data-bind="css: { hide: !editing() }, click: function() { editing(false); _update(); }">
                            <i class="icon-save"></i> 
                        </a> 
                        &nbsp;
                        <a class="hide" data-bind="css: { hide: !editing() }, click: function() { $parent.discardChanges(); editing(false); }">
                            <i class="icon-remove"></i> 
                        </a>
                    </td>
                </tr>
            </script>
        </div>
    </div>

    <script>
        var viewmodel = function() {
            return new tw.pages.RegisterTimelogsViewModel(@Html.ToJson(Model.Options), @Html.ToJson(Model.Timelogs));
        };
    </script>
}