@using Teamworks.Web.Helpers.Extensions.Mvc
@using Teamworks.Web.Views
@model Teamworks.Web.ViewModels.Mvc.RegisterTimelogsViewModel

@{
    ViewBag.Title = "Timelogs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h1>Timelogs <small>On this page you can register where you spent or time and see your past entries for all projects and activities.</small></h1>    
</div>
<div>

    <ul class="nav nav-tabs" data-bind="foreach: tabs">
        <li data-bind="css: {active: $parent.selected() === $data }">
            <a href="#" data-bind="click: $parent._select, text: description">Today</a>
        </li>
    </ul>
    <div class="tab-content">
        <p class="lead"> The registration will be made for day <strong class="highlight" data-bind="text: timelogs.input.date.formatted, highlight: 'alert alert-info'"></strong>. 
            <a class="hide" data-bind="datepicker: timelogs.input.date.formatted, css: { hide: selected().calendar === false }" data-date-autoclose="true" data-date-format="dd/MM/yyyy" data-date-enddate="@DateTime.Today.ToString("dd/MM/yyyy")"><i class="icon-calendar"></i></a>
        </p>
        <form class="form-horizontal" data-bind="submit: timelogs._create">
            <div class="row">
                <div class="offset1 span7">
                    <div class="control-group" >
                        <label class="control-label" for="activity">ActivityViewModel</label>
                        <div class="controls">
<<<<<<< HEAD
                            <input id="project_name" autofocus="autofocus" name="project_name" placeholder="Project, Activity" data-bind="typeahead: typeahead" />
=======
                            <input id="project_name" autofocus="autofocus" name="project_name" placeholder="VetoProjectAttributeViewModel, ActivityViewModel" data-bind="typeahead: typeahead" />
>>>>>>> 71e053f1404e9acfddc8aca3e33140411b35957f
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="description">Description</label>
                        <div class="controls">
                            <input name="description" placeholder="Description" data-bind="value: timelogs.input.description, valueUpdate: 'afterkeyup'" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="duration">Duration</label>
                        <div class="controls">
                            <input name="duration" placeholder="20min" data-bind="value: timelogs.input.duration, valueUpdate: 'afterkeyup'" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-actions">
                <button class="btn btn-large btn-success" type="submit">Register</button>
            </div>
        </form>
    </div>
</div>

<div>
    <header class="lead">
        <h1>Your time <small>Where you spent your days</small></h1>
    </header>
    
    <table class="table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                <th>ActivityViewModel</th>
                <th>Duration</th>
                <th>Description</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody data-bind="template: { name: 'timelog-template', foreach: timelogs }">
        </tbody>
    </table>
    <script type="text/html" id="timelog-template">
        <tr>
            <td>
                <strong data-bind="text: project.name"></strong>, <span data-bind="text: activity.name"></span>
            </td>
            <td data-bind="text: duration"></td>
            <td data-bind="text: description"></td>
            <td data-bind="text: date.formatted"></td>
        </tr>
    </script>
</div>


<script>
    var viewmodel = function() {
        return new tw.pages.RegisterTimelogsViewModel(@Html.ToJson(Model.Options), @Html.ToJson(Model.Timelogs));
    };
</script>