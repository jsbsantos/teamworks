@model string

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var date = @DateTime.Now.ToString("dd/MM/yyyy");
}

<div class="content" data-bind="visible: activity.name">
    <header class="page-header">
        <h1>
            <span data-bind="text: activity.name"></span>
            <small data-bind="text: activity.description, visible: activity.description"></small>
        </h1>
    </header>
    <div class="well-large">
        <div>
            <form class="form-horizontal" data-bind="submit: timelog.create">
                <div class="date input-append" data-autoclose="true" data-date-format="dd/mm/yyyy" data-provide="datepicker">
                    <input value="@date" class="span2" size="16" data-bind="value: timelog.date.formatted" readonly="readonly"/>
                    <span class="add-on"><i class="icon-th"></i></span>
                </div>
                <input type="text" class="control-group input-xlarge" placeholder="Duration in minutes" data-bind="value: timelog.duration, valueUpdate: 'afterkeyup'" />
                <input type="text" class="control-group input-xlarge" placeholder="Timelog description" data-bind="value: timelog.description, valueUpdate: 'afterkeyup'" />
                <button type="submit" class="btn btn-success pull-right">Register time</button>  
            </form>
        </div>
        <table class="table table-striped table-bordered table-condensed">
            <thead>
                <tr>
                    <th>Duration</th>
                    <th>Description</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody data-bind="template: { name: 'timelog-template', foreach: activity.timelogs }">
            </tbody>
        </table>
    </div>
    <script type="text/html" id="timelog-template">
        <tr>
            <td data-bind="text: duration"></td>
            <td data-bind="text: description"></td>
            <td data-bind="text: date"></td>
        </tr>
    </script>

    <script>
        var viewmodel = function() {
            return new TW.viewmodels.Activity('@Model');
        }
    </script>
</div>