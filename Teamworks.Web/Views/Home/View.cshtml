@using Newtonsoft.Json
@using Teamworks.Web.Helpers

@model dynamic
@{
    ViewBag.Title = "Teamworks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="projects">
    <header class="row">
        <div class="">
            <form class="well form-inline" data-bind="submit: new_project, reset: clear">
                <input class="input-large" id="project_name" data-bind="value: project.name" placeholder="Name your project" />
                <input class="input-large" id="project_description" data-bind="value: project.description" placeholder="Describe your project" />
                <button class="btn" type="submit" value="create">Create</button>
                <button data-bind="enable: project.name() || project.description()" class="btn btn-danger btn-mini" type="reset" value="reset">Clear</button>
            </form>
        </div>
    </header>
    <div data-bind="foreach: projects, visible: projects().length > 0">
        <section>
            <div data-bind="css: { 'hide': editing() }, event: { dblclick: toggle_edit }">
                <h2><a data-bind="text: name, attr: {href: url}"></a></h2>    
                <div><span data-bind="text: description"></span>, involved in this project are [insert names here]</div>
            </div>
            <div data-bind="css: { 'hide': !editing() }, event: { dblclick: $parent.save }">
                <form data-bind=>
                    <h2><input class="span12" data-bind="value: name" /></h2>   
                    <div><input data-bind="value: description" />, involved in this project are [insert names here]</div>
                </form>
            </div>
        </section>
    </div>
    <script type="text/javascript">
        var data = @{new JsonSerializer
                           {
                               ContractResolver = new JsonNetFormatter.LowercaseContractResolver()
                           }.Serialize(GetOutputWriter(), Model);}
    </script>
</div>
